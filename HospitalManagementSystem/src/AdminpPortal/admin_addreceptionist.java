/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package AdminpPortal;

import AdminpPortal.admin_detailsclasses.admin_details_opt;
import DBConnectionP.DBConnection;
import LoginForm.loginsection;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author AbdulRehman
 */
public class admin_addreceptionist extends javax.swing.JFrame {

    DBConnection conn = new DBConnection();
    String city=null;
    String gender=null;
    String qualif=null;
    String dobirth=null;
    int cityid=-1;
    int genderid=-1;
    int qualid=-1;
    Boolean chkempty=false;
    
    public admin_addreceptionist() {
        initComponents();
        showtime();
        showdate();
        _dob_error.setVisible(false);
        _phone_error.setVisible(false);
        _qal_error.setVisible(false);
        _fname_error.setVisible(false);
        _lname_error.setVisible(false);
        _age_error.setVisible(false);
        _gender_error.setVisible(false);
        _city_error.setVisible(false);
        _ads_error.setVisible(false);
        _un_error.setVisible(false);
        _pss_error.setVisible(false);
        _sal_error.setVisible(false);
        updatedata.setVisible(false);
        deletedata.setVisible(false);
        getcitydata();
        getgenderdata();
        getqualifdata();
        showdata();
        a_recid_tv.setText(conn.getID("select rid from Recept ORDER BY rid DESC Fetch first 1 rows only"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        timegetting = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        getagebtn = new javax.swing.JButton();
        adddata = new javax.swing.JButton();
        updatedata = new javax.swing.JButton();
        searchrec = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        a_reclname_et = new javax.swing.JTextField();
        a_recfname_et = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        registrationdate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        a_recgender_combo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        a_reccity_combo = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        a_recid_tv = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        a_recpassword_et = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        a_recusername_et = new javax.swing.JTextField();
        a_recaddress_et = new javax.swing.JTextField();
        searching = new javax.swing.JTextField();
        a_recage_et = new javax.swing.JTextField();
        a_recsalary_et = new javax.swing.JTextField();
        a_recqual_combo = new javax.swing.JComboBox<>();
        a_recdob_date = new com.toedter.calendar.JDateChooser();
        a_recphoneno_et = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        recepttable = new javax.swing.JTable();
        _fname_error = new javax.swing.JLabel();
        _un_error = new javax.swing.JLabel();
        _lname_error = new javax.swing.JLabel();
        _age_error = new javax.swing.JLabel();
        _city_error = new javax.swing.JLabel();
        _gender_error = new javax.swing.JLabel();
        _qal_error = new javax.swing.JLabel();
        _phone_error = new javax.swing.JLabel();
        _chk_error8 = new javax.swing.JLabel();
        _ads_error = new javax.swing.JLabel();
        _sal_error = new javax.swing.JLabel();
        _pss_error = new javax.swing.JLabel();
        _dob_error = new javax.swing.JLabel();
        deletedata = new javax.swing.JButton();
        resetall = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        a_doctor_btn = new javax.swing.JButton();
        a_nurse_btn = new javax.swing.JButton();
        a_receptionist_btn = new javax.swing.JButton();
        a_internall_btn = new javax.swing.JButton();
        a_salay_btn = new javax.swing.JButton();
        a_detail_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(947, 708));
        setResizable(false);
        setSize(new java.awt.Dimension(947, 708));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/admin (1).png"))); // NOI18N
        jPanel4.add(jLabel1);
        jLabel1.setBounds(50, 10, 130, 130);

        logout.setBackground(new java.awt.Color(255, 255, 255));
        logout.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        logout.setText("Logout");
        logout.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 51)));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        jPanel4.add(logout);
        logout.setBounds(760, 70, 150, 30);

        jLabel6.setBackground(new java.awt.Color(0, 102, 153));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("                      ADMIN Portal");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 0)));
        jLabel6.setOpaque(true);
        jPanel4.add(jLabel6);
        jLabel6.setBounds(230, 50, 710, 70);

        timegetting.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        timegetting.setText("Time");
        jPanel4.add(timegetting);
        timegetting.setBounds(480, 10, 120, 30);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        getagebtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getagebtn.setText("Get");
        getagebtn.setBorder(new javax.swing.border.MatteBorder(null));
        getagebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getagebtnActionPerformed(evt);
            }
        });
        jPanel1.add(getagebtn);
        getagebtn.setBounds(160, 190, 60, 30);

        adddata.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        adddata.setText("Add");
        adddata.setBorder(new javax.swing.border.MatteBorder(null));
        adddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adddataActionPerformed(evt);
            }
        });
        jPanel1.add(adddata);
        adddata.setBounds(90, 450, 100, 30);

        updatedata.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        updatedata.setText("Update");
        updatedata.setBorder(new javax.swing.border.MatteBorder(null));
        updatedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedataActionPerformed(evt);
            }
        });
        jPanel1.add(updatedata);
        updatedata.setBounds(200, 450, 100, 30);

        searchrec.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchrec.setText("Search");
        searchrec.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(searchrec);
        searchrec.setBounds(610, 70, 70, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("L-Name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 140, 50, 30);

        a_reclname_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_reclname_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        a_reclname_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_reclname_etKeyTyped(evt);
            }
        });
        jPanel1.add(a_reclname_et);
        a_reclname_et.setBounds(90, 140, 140, 30);

        a_recfname_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recfname_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        a_recfname_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_recfname_etKeyTyped(evt);
            }
        });
        jPanel1.add(a_recfname_et);
        a_recfname_et.setBounds(90, 100, 140, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Recept ID");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 60, 60, 30);

        registrationdate.setEditable(false);
        registrationdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        registrationdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        registrationdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(registrationdate);
        registrationdate.setBounds(220, 10, 140, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Age");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 190, 30, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("F-Name");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(30, 100, 50, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Ph NO");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(270, 140, 40, 30);

        a_recgender_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recgender_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gender" }));
        a_recgender_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_recgender_comboActionPerformed(evt);
            }
        });
        jPanel1.add(a_recgender_combo);
        a_recgender_combo.setBounds(330, 230, 130, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("City");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(40, 230, 30, 30);

        a_reccity_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_reccity_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select City" }));
        a_reccity_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_reccity_comboActionPerformed(evt);
            }
        });
        jPanel1.add(a_reccity_combo);
        a_reccity_combo.setBounds(90, 230, 140, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("DOB");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(280, 100, 30, 30);

        a_recid_tv.setEditable(false);
        a_recid_tv.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recid_tv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        a_recid_tv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(a_recid_tv);
        a_recid_tv.setBounds(90, 60, 60, 30);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Qualification");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(250, 190, 75, 30);

        a_recpassword_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recpassword_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(a_recpassword_et);
        a_recpassword_et.setBounds(90, 350, 170, 30);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Address");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(30, 270, 50, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Password");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 350, 60, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setText("Salary");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(290, 350, 40, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Username");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 310, 60, 30);

        a_recusername_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recusername_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(a_recusername_et);
        a_recusername_et.setBounds(90, 310, 170, 30);

        a_recaddress_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recaddress_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(a_recaddress_et);
        a_recaddress_et.setBounds(90, 270, 370, 30);

        searching.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searching.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searching.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        searching.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchingKeyTyped(evt);
            }
        });
        jPanel1.add(searching);
        searching.setBounds(500, 70, 80, 30);

        a_recage_et.setEditable(false);
        a_recage_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recage_et.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        a_recage_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        a_recage_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_recage_etKeyTyped(evt);
            }
        });
        jPanel1.add(a_recage_et);
        a_recage_et.setBounds(90, 190, 50, 30);

        a_recsalary_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recsalary_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        a_recsalary_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_recsalary_etKeyTyped(evt);
            }
        });
        jPanel1.add(a_recsalary_et);
        a_recsalary_et.setBounds(340, 350, 120, 30);

        a_recqual_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recqual_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Qual" }));
        a_recqual_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_recqual_comboActionPerformed(evt);
            }
        });
        jPanel1.add(a_recqual_combo);
        a_recqual_combo.setBounds(330, 190, 130, 30);
        jPanel1.add(a_recdob_date);
        a_recdob_date.setBounds(320, 100, 140, 30);

        a_recphoneno_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        a_recphoneno_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        a_recphoneno_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a_recphoneno_etKeyTyped(evt);
            }
        });
        jPanel1.add(a_recphoneno_et);
        a_recphoneno_et.setBounds(320, 140, 140, 30);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        recepttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RID", "F-Name", "L-Name", "Sex", "PhNo", "regDate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        recepttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recepttableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(recepttable);
        if (recepttable.getColumnModel().getColumnCount() > 0) {
            recepttable.getColumnModel().getColumn(0).setResizable(false);
            recepttable.getColumnModel().getColumn(0).setPreferredWidth(50);
            recepttable.getColumnModel().getColumn(1).setResizable(false);
            recepttable.getColumnModel().getColumn(1).setPreferredWidth(80);
            recepttable.getColumnModel().getColumn(2).setResizable(false);
            recepttable.getColumnModel().getColumn(2).setPreferredWidth(80);
            recepttable.getColumnModel().getColumn(3).setResizable(false);
            recepttable.getColumnModel().getColumn(3).setPreferredWidth(80);
            recepttable.getColumnModel().getColumn(4).setResizable(false);
            recepttable.getColumnModel().getColumn(4).setPreferredWidth(100);
            recepttable.getColumnModel().getColumn(5).setResizable(false);
            recepttable.getColumnModel().getColumn(5).setPreferredWidth(100);
        }

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(490, 110, 200, 370);

        _fname_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _fname_error.setForeground(new java.awt.Color(255, 0, 0));
        _fname_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _fname_error.setText("*");
        jPanel1.add(_fname_error);
        _fname_error.setBounds(230, 110, 20, 10);

        _un_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _un_error.setForeground(new java.awt.Color(255, 0, 0));
        _un_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _un_error.setText("*");
        jPanel1.add(_un_error);
        _un_error.setBounds(260, 320, 20, 10);

        _lname_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _lname_error.setForeground(new java.awt.Color(255, 0, 0));
        _lname_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _lname_error.setText("*");
        jPanel1.add(_lname_error);
        _lname_error.setBounds(230, 150, 20, 10);

        _age_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _age_error.setForeground(new java.awt.Color(255, 0, 0));
        _age_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _age_error.setText("*");
        jPanel1.add(_age_error);
        _age_error.setBounds(140, 200, 20, 10);

        _city_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _city_error.setForeground(new java.awt.Color(255, 0, 0));
        _city_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _city_error.setText("*");
        jPanel1.add(_city_error);
        _city_error.setBounds(230, 240, 20, 10);

        _gender_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _gender_error.setForeground(new java.awt.Color(255, 0, 0));
        _gender_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _gender_error.setText("*");
        jPanel1.add(_gender_error);
        _gender_error.setBounds(460, 240, 20, 10);

        _qal_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _qal_error.setForeground(new java.awt.Color(255, 0, 0));
        _qal_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _qal_error.setText("*");
        jPanel1.add(_qal_error);
        _qal_error.setBounds(460, 200, 20, 10);

        _phone_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _phone_error.setForeground(new java.awt.Color(255, 0, 0));
        _phone_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _phone_error.setText("*");
        jPanel1.add(_phone_error);
        _phone_error.setBounds(460, 150, 20, 10);

        _chk_error8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _chk_error8.setForeground(new java.awt.Color(255, 0, 0));
        _chk_error8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _chk_error8.setText("*");
        jPanel1.add(_chk_error8);
        _chk_error8.setBounds(580, 80, 20, 10);

        _ads_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _ads_error.setForeground(new java.awt.Color(255, 0, 0));
        _ads_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _ads_error.setText("*");
        jPanel1.add(_ads_error);
        _ads_error.setBounds(460, 280, 20, 10);

        _sal_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _sal_error.setForeground(new java.awt.Color(255, 0, 0));
        _sal_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _sal_error.setText("*");
        jPanel1.add(_sal_error);
        _sal_error.setBounds(460, 360, 20, 10);

        _pss_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _pss_error.setForeground(new java.awt.Color(255, 0, 0));
        _pss_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _pss_error.setText("*");
        jPanel1.add(_pss_error);
        _pss_error.setBounds(260, 360, 20, 10);

        _dob_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _dob_error.setForeground(new java.awt.Color(255, 0, 0));
        _dob_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _dob_error.setText("*");
        jPanel1.add(_dob_error);
        _dob_error.setBounds(460, 110, 20, 10);

        deletedata.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deletedata.setText("Delete");
        deletedata.setBorder(new javax.swing.border.MatteBorder(null));
        deletedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletedataActionPerformed(evt);
            }
        });
        jPanel1.add(deletedata);
        deletedata.setBounds(320, 450, 100, 30);

        resetall.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetall.setText("Reset");
        resetall.setBorder(new javax.swing.border.MatteBorder(null));
        resetall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetallActionPerformed(evt);
            }
        });
        jPanel1.add(resetall);
        resetall.setBounds(170, 60, 60, 30);

        jPanel4.add(jPanel1);
        jPanel1.setBounds(230, 160, 700, 500);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setText("Add Receptionist");
        jPanel4.add(jLabel13);
        jLabel13.setBounds(430, 120, 190, 40);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(null);

        a_doctor_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_doctor_btn.setText("Doctor");
        a_doctor_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_doctor_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_doctor_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_doctor_btn);
        a_doctor_btn.setBounds(10, 50, 190, 40);

        a_nurse_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_nurse_btn.setText("Nurse");
        a_nurse_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_nurse_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_nurse_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_nurse_btn);
        a_nurse_btn.setBounds(10, 170, 190, 40);

        a_receptionist_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_receptionist_btn.setText("Receptionist");
        a_receptionist_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_receptionist_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_receptionist_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_receptionist_btn);
        a_receptionist_btn.setBounds(10, 110, 190, 40);

        a_internall_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_internall_btn.setText("Internal");
        a_internall_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_internall_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_internall_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_internall_btn);
        a_internall_btn.setBounds(10, 350, 190, 40);

        a_salay_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_salay_btn.setText("Salary");
        a_salay_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_salay_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_salay_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_salay_btn);
        a_salay_btn.setBounds(10, 230, 190, 40);

        a_detail_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        a_detail_btn.setText("Details");
        a_detail_btn.setBorder(new javax.swing.border.MatteBorder(null));
        a_detail_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a_detail_btnActionPerformed(evt);
            }
        });
        jPanel2.add(a_detail_btn);
        a_detail_btn.setBounds(10, 290, 190, 40);

        jPanel4.add(jPanel2);
        jPanel2.setBounds(10, 160, 210, 500);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 940, 680);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void getgenderdata(){
        try{
            conn.OpenConnection();
            String query="select * from Gender";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("gname");
                a_recgender_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    
    private void getcitydata(){
        try{
            conn.OpenConnection();
            String query="select * from City";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("cname");
                a_reccity_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    
    private void getqualifdata(){
        try{
            conn.OpenConnection();
            String query="select * from Qualification";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("qname");
                a_recqual_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    
    private void showtime(){
        new Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("hh:mm:ss a");
            timegetting.setText(t.format(d));
        }).start();   
    }
    
    private void showdate(){
        new Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("yyyy-MM-dd");
            registrationdate.setText(t.format(d));
        }).start();
        
    }
    
    private void showdata(){
        ArrayList<admin_addingclass.addreceptclass> list = userlist();
        DefaultTableModel model = (DefaultTableModel) recepttable.getModel();
        Object[] row = new Object[6];
        for(int i=0 ; i<list.size() ; i++){
            row[0] = list.get(i).getRid();
            row[1] = list.get(i).getRfname();
            row[2] = list.get(i).getRlname();
            row[3] = list.get(i).getSex();
            row[4] = list.get(i).getPhno();
            row[5] = list.get(i).getRegdate();
            model.addRow(row);
            System.out.println(list.get(i).getRegdate());
        }
    }
    
    private ArrayList<admin_addingclass.addreceptclass> userlist() {
            ArrayList<admin_addingclass.addreceptclass> userList = new ArrayList<>();
//            int rid,age,sal;
//        String rfname,rlname,dob,sex,address,phno,city,regdate,username,pass,qualification;
//(rid, age, sal, rfname, rlname, dob, sex, address, phno, city, regdate, username, pass,qualification)
            try{
                conn.OpenConnection();
                String selectquery="select rid,age,salery,rfname,rlname,dob,gname,address,phno,cname,regdate,username,pass,qname from recept r ,qualification q ,city c ,gender g where r.qid=q.qid and r.cityid=c.cid and r.sexid=g.gid order by rid desc";
                conn.GetData(selectquery);
                admin_addingclass adc = new admin_addingclass();
                admin_addingclass.addreceptclass anc;
                while(conn.rst.next()){
                    anc = adc.new addreceptclass(
                    conn.rst.getInt("rid"),
                    conn.rst.getInt("age"),
                    conn.rst.getInt("salery"),
                    conn.rst.getString("rfname"),
                    conn.rst.getString("rlname"),
                    conn.rst.getString("dob"),
                    conn.rst.getString("gname"),
                    conn.rst.getString("address"),
                    conn.rst.getString("phno"),
                    conn.rst.getString("cname"),
                    conn.rst.getString("regdate"),        
                    conn.rst.getString("username"),
                    conn.rst.getString("pass"),
                    conn.rst.getString("qname")    
                    );
                 userList.add(anc);   
                }
                
            }catch(SQLException e ){System.out.println(e);}
            
    return userList;
    }
    
    private void searchingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchingKeyTyped

        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_searchingKeyTyped

    private void a_recage_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_recage_etKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }

        if(a_recage_et.getText().length()==3 ){
            if((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
                getToolkit().beep();
                evt.consume();
            }
        }

        if(a_recage_et.getText().length() ==3){
            a_recage_et.requestFocusInWindow();

        }
    }//GEN-LAST:event_a_recage_etKeyTyped

    private void a_recphoneno_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_recphoneno_etKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }

        if(a_recphoneno_et.getText().length() ==11 ){
            if((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
                getToolkit().beep();
                evt.consume();
            }
        }

        if(a_recphoneno_et.getText().length() == 11 ){
            a_recphoneno_et.requestFocusInWindow();

        }
    }//GEN-LAST:event_a_recphoneno_etKeyTyped

    private void a_recsalary_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_recsalary_etKeyTyped

        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
        if(a_recsalary_et.getText().length() ==6 ){
            if((Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
                getToolkit().beep();
                evt.consume();
            }
        }

        if(a_recsalary_et.getText().length() == 6){
            a_recsalary_et.requestFocusInWindow();

        }
        
    }//GEN-LAST:event_a_recsalary_etKeyTyped

    private void a_doctor_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_doctor_btnActionPerformed
        admin_adddoctor add = new admin_adddoctor();
        add.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_doctor_btnActionPerformed

    private void a_nurse_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_nurse_btnActionPerformed
        admin_addnurse ann = new admin_addnurse();
        ann.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_nurse_btnActionPerformed

    private void a_receptionist_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_receptionist_btnActionPerformed
        admin_addreceptionist arr = new admin_addreceptionist();
        arr.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_receptionist_btnActionPerformed

    private void a_internall_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_internall_btnActionPerformed
        admin_internal att = new admin_internal();
        att.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_internall_btnActionPerformed

    private void a_salay_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_salay_btnActionPerformed
        admin_salary ass = new admin_salary();
        ass.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_salay_btnActionPerformed

    private void a_detail_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_detail_btnActionPerformed
        admin_details adt = new admin_details();
        adt.setVisible(true);
        dispose();
    }//GEN-LAST:event_a_detail_btnActionPerformed

    private void getagebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getagebtnActionPerformed
        try{
            SimpleDateFormat t = new SimpleDateFormat("yyyy-MM-dd");
            dobirth = t.format(a_recdob_date.getDate());
            System.out.println(dobirth);
            String today=registrationdate.getText();
            long diff = -1;
            Date d1 = t.parse(dobirth);
            Date d2 = t.parse(today);
            diff = d2.getYear()-d1.getYear();
            String totaldays = String.valueOf(diff);
            a_recage_et.setText(totaldays);
            if(diff >= 18){
                _age_error.setVisible(false);
                _dob_error.setVisible(false);
            }
            else{
                JOptionPane.showMessageDialog(null, "Receptionist's age must be greater than 18");
                _dob_error.setVisible(true);
                _age_error.setVisible(true);
            }
            if(dobirth.equals("")){ _dob_error.setVisible(true);}
        }catch(NullPointerException | ParseException e){System.out.println(e);_dob_error.setVisible(true);}
    }//GEN-LAST:event_getagebtnActionPerformed

    private void a_recgender_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_recgender_comboActionPerformed
        if(a_recgender_combo.getSelectedItem().equals("Gender")){gender=null;}
        else{
            _gender_error.setVisible(false);
            gender=String.valueOf(a_recgender_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from Gender";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("gid");
                String s2 = conn.rst.getString("gname");
                if(s2.equals(gender)){
                    genderid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + genderid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_a_recgender_comboActionPerformed

    private void a_recqual_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_recqual_comboActionPerformed
        if(a_recqual_combo.getSelectedItem().equals("Select Qual")){ qualif=null;}
        else{
            _qal_error.setVisible(false);
            qualif=String.valueOf(a_recqual_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from Qualification";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("qid");
                String s2 = conn.rst.getString("qname");
                int    s3 = conn.rst.getInt("qamount");
                if(s2.equals(qualif)){
                    qualid=s1;
                    a_recsalary_et.setText(String.valueOf(s3*30));
//                    System.out.println(s1 + " : " + s2 + " : " + qualid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_a_recqual_comboActionPerformed

    private void a_reccity_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a_reccity_comboActionPerformed
        if(a_reccity_combo.getSelectedItem().equals("Select City")){city=null;}
        else{
            _city_error.setVisible(false);
            city=String.valueOf(a_reccity_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from City";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("cid");
                String s2 = conn.rst.getString("cname");
                if(s2.equals(city)){
                    cityid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + cityid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_a_reccity_comboActionPerformed

    private void adddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adddataActionPerformed
        Boolean emptyfiled=false;
        int agee=-1;
        if(a_recfname_et.getText().equals("")){ emptyfiled=false;_fname_error.setVisible(true);}
        if(a_reclname_et.getText().equals("")){ emptyfiled=false;_lname_error.setVisible(true);}
        if(a_recage_et.getText().equals("")){ emptyfiled=false;_age_error.setVisible(true);_dob_error.setVisible(true);}
        if(a_recaddress_et.getText().equals("")){ emptyfiled=false;_ads_error.setVisible(true);}
        if(a_recgender_combo.getSelectedItem().equals("Gender")){ emptyfiled=false;_gender_error.setVisible(true);}
        if(a_reccity_combo.getSelectedItem().equals("Select City")){ emptyfiled=false;_city_error.setVisible(true);}
        if(a_recqual_combo.getSelectedItem().equals("Select Qual")){ emptyfiled=false;_qal_error.setVisible(true);}
        if(a_recphoneno_et.getText().equals("")){ emptyfiled=false;_phone_error.setVisible(true);}
        if(a_recusername_et.getText().equals("")){ emptyfiled=false;_un_error.setVisible(true);}
        if(a_recpassword_et.getText().equals("")){ emptyfiled=false;_pss_error.setVisible(true);}
        if(a_recsalary_et.getText().equals("")){ emptyfiled=false;_sal_error.setVisible(true);}
        try{
             agee=Integer.parseInt(a_recage_et.getText());
            if(agee<18){
                emptyfiled=false;
                _age_error.setVisible(true);
                _dob_error.setVisible(true);
            }
        }catch(NumberFormatException e){System.out.println(e);}
        
        if(!a_recfname_et.getText().isEmpty()
                && !a_reclname_et.getText().isEmpty()
                && !a_recage_et.getText().isEmpty()
                && !a_recaddress_et.getText().isEmpty()
                && !a_recgender_combo.getSelectedItem().equals("Gender")
                && !a_reccity_combo.getSelectedItem().equals("Select City")
                && !a_recqual_combo.getSelectedItem().equals("Select Qual")
                && !a_recphoneno_et.getText().isEmpty()
                && !a_recusername_et.getText().isEmpty()
                && !a_recpassword_et.getText().isEmpty()
                && !a_recsalary_et.getText().isEmpty()
                && agee >= 18
                ){emptyfiled=true;}
        if(emptyfiled == false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
        
        if(emptyfiled == true){
            _dob_error.setVisible(false);
            _phone_error.setVisible(false);
            _qal_error.setVisible(false);
            _fname_error.setVisible(false);
            _lname_error.setVisible(false);
            _age_error.setVisible(false);
            _gender_error.setVisible(false);
            _city_error.setVisible(false);
            _ads_error.setVisible(false);
            _un_error.setVisible(false);
            _pss_error.setVisible(false);
            _sal_error.setVisible(false);
            
            String query="insert into Recept(rfname,rlname,age,dob,sexid,address"
                    + ",phno,cityid,regdate,username,pass,qid,salery) values ("
                    +" '"+a_recfname_et.getText()+"' , '"+a_reclname_et.getText()+"' , "+a_recage_et.getText()
                    +" , to_date('"+dobirth+"','yyyy-MM-dd') , "+genderid+" , '"+a_recaddress_et.getText()+"' , "+a_recphoneno_et.getText()
                    +" , "+cityid+" , to_date('"+registrationdate.getText()+"','yyyy-MM-dd') , '"+a_recusername_et.getText()
                    +"' , '"+a_recpassword_et.getText()+"' , "+qualid+" , "+a_recsalary_et.getText()+")";
            try{
                conn.OpenConnection();
                int flag = conn.InsertUpdateDelete(query);
                if(flag==1){
                    JOptionPane.showMessageDialog(null,"Successfully Inserted..!");
                    a_recid_tv.setText(conn.getID("select rid from Recept ORDER BY rid DESC Fetch first 1 rows only"));
                    a_recfname_et.setText("");
                    a_reclname_et.setText("");
                    a_recage_et.setText("");
                    a_recdob_date.setDate(null);
//                    a_recdob_date.cleanup();
                    a_recgender_combo.setSelectedIndex(0);
                    a_recaddress_et.setText("");
                    a_recphoneno_et.setText("");
                    a_reccity_combo.setSelectedIndex(0);
                    a_recusername_et.setText("");
                    a_recpassword_et.setText("");
                    a_recqual_combo.setSelectedIndex(0);
                    a_recsalary_et.setText("");
                    DefaultTableModel model1 = (DefaultTableModel) recepttable.getModel();
                    model1.setRowCount(0);
                    showdata();
                    
                }
                conn.CloseConnection();
            }catch(HeadlessException e){System.out.println(e);}
        
        }
        
    }//GEN-LAST:event_adddataActionPerformed

    private void resetallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetallActionPerformed
        _dob_error.setVisible(false);
        _phone_error.setVisible(false);
        _qal_error.setVisible(false);
        _fname_error.setVisible(false);
        _lname_error.setVisible(false);
        _age_error.setVisible(false);
        _gender_error.setVisible(false);
        _city_error.setVisible(false);
        _ads_error.setVisible(false);
        _un_error.setVisible(false);
        _pss_error.setVisible(false);
        _sal_error.setVisible(false);
        updatedata.setVisible(false);
        adddata.setVisible(true);
        deletedata.setVisible(false);
        a_recid_tv.setText(conn.getID("select rid from Recept ORDER BY rid DESC Fetch first 1 rows only"));
        a_recfname_et.setText("");
        a_reclname_et.setText("");
        a_recage_et.setText("");
        a_recdob_date.setDate(null);
//                    a_recdob_date.cleanup();
        a_recgender_combo.setSelectedIndex(0);
        a_recaddress_et.setText("");
        a_recphoneno_et.setText("");
        a_reccity_combo.setSelectedIndex(0);
        a_recusername_et.setText("");
        a_recpassword_et.setText("");
        a_recqual_combo.setSelectedIndex(0);
        a_recsalary_et.setText("");
                    
    }//GEN-LAST:event_resetallActionPerformed

    private void deletedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletedataActionPerformed
        int yesorno = JOptionPane.showConfirmDialog(null,"Do you want to Delete ","Deleted Record" , JOptionPane.YES_NO_OPTION);
        if(yesorno == 0 ){
            int row = recepttable.getSelectedRow();
            int value = Integer.parseInt((recepttable.getModel().getValueAt(row, 0).toString()));
            try{
                conn.OpenConnection();
                String query="delete from Recept where rid="+value;
                int flag = conn.InsertUpdateDelete(query);
                if(flag==1){
                    JOptionPane.showMessageDialog(null,"Successfully Deleted..!");
                    DefaultTableModel model1 = (DefaultTableModel) recepttable.getModel();
                    model1.setRowCount(0);
                    showdata();
                    a_recfname_et.setText("");
                    a_reclname_et.setText("");
                    a_recage_et.setText("");
                    a_recdob_date.setDate(null);
                    a_recgender_combo.setSelectedIndex(0);
                    a_recaddress_et.setText("");
                    a_recphoneno_et.setText("");
                    a_reccity_combo.setSelectedIndex(0);
                    a_recusername_et.setText("");
                    a_recpassword_et.setText("");
                    a_recqual_combo.setSelectedIndex(0);
                    a_recsalary_et.setText("");
                    updatedata.setVisible(false);
                    deletedata.setVisible(false);
                    adddata.setVisible(true);
                }
            }catch(HeadlessException e){System.out.println(e);}
        }
        else{
        JOptionPane.showMessageDialog(null,"Delete Canceled..!");
        }
        
    }//GEN-LAST:event_deletedataActionPerformed

    private void a_recfname_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_recfname_etKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_a_recfname_etKeyTyped

    private void recepttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recepttableMouseClicked
        _dob_error.setVisible(false);
        _phone_error.setVisible(false);
        _qal_error.setVisible(false);
        _fname_error.setVisible(false);
        _lname_error.setVisible(false);
        _age_error.setVisible(false);
        _gender_error.setVisible(false);
        _city_error.setVisible(false);
        _ads_error.setVisible(false);
        _un_error.setVisible(false);
        _pss_error.setVisible(false);
        _sal_error.setVisible(false);
        adddata.setVisible(false);
        updatedata.setVisible(true);
        deletedata.setVisible(true);
        int i = recepttable.getSelectedRow();
        TableModel model = recepttable.getModel();
        a_recid_tv.setText(model.getValueAt(i,0).toString());
        int id = Integer.valueOf(a_recid_tv.getText());
        ArrayList<admin_addingclass.addreceptclass> listing = userlist();
        for(int j=0 ; j<listing.size() ; j++){
            if(listing.get(j).getRid()== id){
                a_recid_tv.setText(String.valueOf(listing.get(j).getRid()));
                a_recfname_et.setText(String.valueOf(listing.get(j).getRfname()));
                a_reclname_et.setText(String.valueOf(listing.get(j).getRlname()));
                a_recage_et.setText(String.valueOf(listing.get(j).getAge()));
                try{
                    
                    Date dobdatee=new SimpleDateFormat("yyyy-MM-dd").parse(listing.get(j).getDob()); 
                    a_recdob_date.setDate(dobdatee);
                }catch(ParseException e ){System.out.println(e);}
                a_recgender_combo.setSelectedItem(listing.get(j).getSex());
                a_recaddress_et.setText(String.valueOf(listing.get(j).getAddress()));
                a_recphoneno_et.setText(String.valueOf(listing.get(j).getPhno()));
                a_reccity_combo.setSelectedItem(listing.get(j).getCity());
                a_recusername_et.setText(String.valueOf(listing.get(j).getUsername()));
                a_recpassword_et.setText(String.valueOf(listing.get(j).getPass()));
                a_recsalary_et.setText(String.valueOf(listing.get(j).getSal()));
                a_recqual_combo.setSelectedItem(listing.get(j).getQualification());
               
//                System.out.println(//listing.get(j).getRid()
//                +listing.get(j).getRfname()+"\n"
//                +listing.get(j).getRlname()+"\n"
//                +listing.get(j).getAge()+"\n"
//                +listing.get(j).getDob()+"\n"
//                +listing.get(j).getSex()+"\n"
//                +listing.get(j).getAddress()+"\n"
//                +listing.get(j).getPhno()+"\n"
//                +listing.get(j).getCity()+"\n"
//                +listing.get(j).getRegdate()+"\n"
//                +listing.get(j).getUsername()+"\n"
//                +listing.get(j).getPass()+"\n"
//                +listing.get(j).getQualification()+"\n"
//                +listing.get(j).getSal()+"\n");
                break;
            }
        }  
    }//GEN-LAST:event_recepttableMouseClicked

    private void a_reclname_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a_reclname_etKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_a_reclname_etKeyTyped

    private void updatedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedataActionPerformed
        Boolean emptyfiled=false;
        int agee=-1;
        if(a_recfname_et.getText().equals("")){ emptyfiled=false;_fname_error.setVisible(true);}
        if(a_reclname_et.getText().equals("")){ emptyfiled=false;_lname_error.setVisible(true);}
        if(a_recage_et.getText().equals("")){ emptyfiled=false;_age_error.setVisible(true);_dob_error.setVisible(true);}
        if(a_recaddress_et.getText().equals("")){ emptyfiled=false;_ads_error.setVisible(true);}
        if(a_recgender_combo.getSelectedItem().equals("Gender")){ emptyfiled=false;_gender_error.setVisible(true);}
        if(a_reccity_combo.getSelectedItem().equals("Select City")){ emptyfiled=false;_city_error.setVisible(true);}
        if(a_recqual_combo.getSelectedItem().equals("Select Qual")){ emptyfiled=false;_qal_error.setVisible(true);}
        if(a_recphoneno_et.getText().equals("")){ emptyfiled=false;_phone_error.setVisible(true);}
        if(a_recusername_et.getText().equals("")){ emptyfiled=false;_un_error.setVisible(true);}
        if(a_recpassword_et.getText().equals("")){ emptyfiled=false;_pss_error.setVisible(true);}
        if(a_recsalary_et.getText().equals("")){ emptyfiled=false;_sal_error.setVisible(true);}
        
        try{
             agee=Integer.parseInt(a_recage_et.getText());
            if(agee<18){
                emptyfiled=false;
                _age_error.setVisible(true);
                _dob_error.setVisible(true);
            }
        }catch(NumberFormatException e){System.out.println(e);}
        
        if(!a_recfname_et.getText().isEmpty()
                && !a_reclname_et.getText().isEmpty()
                && !a_recage_et.getText().isEmpty()
                && !a_recaddress_et.getText().isEmpty()
                && !a_recgender_combo.getSelectedItem().equals("Gender")
                && !a_reccity_combo.getSelectedItem().equals("Select City")
                && !a_recqual_combo.getSelectedItem().equals("Select Qual")
                && !a_recphoneno_et.getText().isEmpty()
                && !a_recusername_et.getText().isEmpty()
                && !a_recpassword_et.getText().isEmpty()
                && !a_recsalary_et.getText().isEmpty()
                && agee>=18
                ){emptyfiled=true;}
        if(emptyfiled == false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
        
        if(emptyfiled == true){
            _dob_error.setVisible(false);
            _phone_error.setVisible(false);
            _qal_error.setVisible(false);
            _fname_error.setVisible(false);
            _lname_error.setVisible(false);
            _age_error.setVisible(false);
            _gender_error.setVisible(false);
            _city_error.setVisible(false);
            _ads_error.setVisible(false);
            _un_error.setVisible(false);
            _pss_error.setVisible(false);
            _sal_error.setVisible(false);
            
            int row = recepttable.getSelectedRow();
            int value = Integer.parseInt((recepttable.getModel().getValueAt(row, 0).toString()));
            
            try{
                String query=("update Recept set rfname='"+a_recfname_et.getText()+"' ,rlname='"+a_reclname_et.getText()
                +"' , age ="+a_recage_et.getText()+" , dob = to_date('"+dobirth+"','yyyy-mm-dd') , sexid="+genderid
                +"  , address ='"+a_recaddress_et.getText()+"' , phno ='"+a_recphoneno_et.getText()+"' , cityid="+cityid
                +"  , regdate =to_date('"+registrationdate.getText()+"','yyyy-mm-dd') , username = '"+a_recusername_et.getText()
                +"' , pass ='"+a_recpassword_et.getText()+"' , qid="+qualid+" , salery="+a_recsalary_et.getText()
                +" where rid="+value);
                System.out.println(dobirth);
                System.out.println(registrationdate.getText());
                conn.OpenConnection();
                int flag = conn.InsertUpdateDelete(query);
                if(flag==1){
                    JOptionPane.showMessageDialog(null,"Successfully Updated..!");
                    a_recid_tv.setText(conn.getID("select rid from Recept ORDER BY rid DESC Fetch first 1 rows only"));
                    a_recfname_et.setText("");
                    a_reclname_et.setText("");
                    a_recage_et.setText("");
                    a_recdob_date.setDate(null);
                    a_recgender_combo.setSelectedIndex(0);
                    a_recaddress_et.setText("");
                    a_recphoneno_et.setText("");
                    a_reccity_combo.setSelectedIndex(0);
                    a_recusername_et.setText("");
                    a_recpassword_et.setText("");
                    a_recqual_combo.setSelectedIndex(0);
                    a_recsalary_et.setText("");
                    DefaultTableModel model1 = (DefaultTableModel) recepttable.getModel();
                    model1.setRowCount(0);
                    showdata();
                    updatedata.setVisible(false);
                    deletedata.setVisible(false);
                    adddata.setVisible(true);
                }
                conn.CloseConnection();
            }catch(HeadlessException e){System.out.println(e);}
        
        }
        
    }//GEN-LAST:event_updatedataActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        LoginForm.loginsection lfl = new loginsection();
        lfl.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_details_opt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
      
        java.awt.EventQueue.invokeLater(() -> {
            new admin_addreceptionist().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _ads_error;
    private javax.swing.JLabel _age_error;
    private javax.swing.JLabel _chk_error8;
    private javax.swing.JLabel _city_error;
    private javax.swing.JLabel _dob_error;
    private javax.swing.JLabel _fname_error;
    private javax.swing.JLabel _gender_error;
    private javax.swing.JLabel _lname_error;
    private javax.swing.JLabel _phone_error;
    private javax.swing.JLabel _pss_error;
    private javax.swing.JLabel _qal_error;
    private javax.swing.JLabel _sal_error;
    private javax.swing.JLabel _un_error;
    private javax.swing.JButton a_detail_btn;
    private javax.swing.JButton a_doctor_btn;
    private javax.swing.JButton a_internall_btn;
    private javax.swing.JButton a_nurse_btn;
    private javax.swing.JTextField a_recaddress_et;
    private javax.swing.JTextField a_recage_et;
    private javax.swing.JComboBox<String> a_reccity_combo;
    private com.toedter.calendar.JDateChooser a_recdob_date;
    private javax.swing.JButton a_receptionist_btn;
    private javax.swing.JTextField a_recfname_et;
    private javax.swing.JComboBox<String> a_recgender_combo;
    private javax.swing.JTextField a_recid_tv;
    private javax.swing.JTextField a_reclname_et;
    private javax.swing.JTextField a_recpassword_et;
    private javax.swing.JTextField a_recphoneno_et;
    private javax.swing.JComboBox<String> a_recqual_combo;
    private javax.swing.JTextField a_recsalary_et;
    private javax.swing.JTextField a_recusername_et;
    private javax.swing.JButton a_salay_btn;
    private javax.swing.JButton adddata;
    private javax.swing.JButton deletedata;
    private javax.swing.JButton getagebtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JTable recepttable;
    private javax.swing.JTextField registrationdate;
    private javax.swing.JButton resetall;
    private javax.swing.JTextField searching;
    private javax.swing.JButton searchrec;
    private javax.swing.JLabel timegetting;
    private javax.swing.JButton updatedata;
    // End of variables declaration//GEN-END:variables

}
