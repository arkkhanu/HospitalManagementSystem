/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminpPortal.admin_internalclasses;

import AdminpPortal.admin_addingclass;
import AdminpPortal.admin_internal;
import DBConnectionP.DBConnection;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author AbdulRehman
 */
public class admin_internal_rooms extends javax.swing.JFrame {

    int roomcatid=-1 , wardtypeid=-1 , statusid =-1;
    String roomcats = null , wardtypes = null , statuss = null;
    
    DBConnection conn = new DBConnection();
    
    public admin_internal_rooms() {
        initComponents();
        _searching_error.setVisible(false);
        
        rr_id_tv.setText(conn.getID("select rrid from room ORDER BY rrid DESC Fetch first 1 rows only"));
        
        _nurse_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _status_error.setVisible(false);
        _ward_error.setVisible(false);
        
        adddata.setVisible(true);
        updatedata.setVisible(false);
        
        showdata();
        showdate();
        showtime();
        getWardtype();
        getRoomCat();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timegetting = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        registrationdate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rr_id_tv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nurseidcheck = new javax.swing.JButton();
        resetall = new javax.swing.JButton();
        rr_rcat_combo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rr_nlname = new javax.swing.JTextField();
        adddata = new javax.swing.JButton();
        rr_nurseid_et = new javax.swing.JTextField();
        rr_nfname = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        rr_statuscombo = new javax.swing.JComboBox<>();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        searching = new javax.swing.JTextField();
        _ward_error = new javax.swing.JLabel();
        rr_ward_combo = new javax.swing.JComboBox<>();
        _searching_error = new javax.swing.JLabel();
        _status_error = new javax.swing.JLabel();
        _nurse_error = new javax.swing.JLabel();
        updatedata = new javax.swing.JButton();
        _roomcate_error = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        i_addqualification = new javax.swing.JButton();
        i_addroomcate = new javax.swing.JButton();
        i_addrooms = new javax.swing.JButton();
        i_addward = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(947, 708));
        setResizable(false);
        setSize(new java.awt.Dimension(947, 708));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/admin (1).png"))); // NOI18N
        jPanel4.add(jLabel1);
        jLabel1.setBounds(50, 10, 130, 130);

        timegetting.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        timegetting.setText("Time");
        jPanel4.add(timegetting);
        timegetting.setBounds(510, 10, 120, 30);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        registrationdate.setEditable(false);
        registrationdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        registrationdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        registrationdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(registrationdate);
        registrationdate.setBounds(250, 10, 140, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Room ID");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 100, 60, 30);

        rr_id_tv.setEditable(false);
        rr_id_tv.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_id_tv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rr_id_tv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(rr_id_tv);
        rr_id_tv.setBounds(100, 100, 60, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Room Cate");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 150, 70, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Ward Type");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 200, 70, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RID", "RoomCate", "WardType", "NurseID", "N-F-Name", "N-L-Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(320, 150, 370, 270);

        nurseidcheck.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nurseidcheck.setText("Get");
        nurseidcheck.setBorder(new javax.swing.border.MatteBorder(null));
        nurseidcheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nurseidcheckActionPerformed(evt);
            }
        });
        jPanel1.add(nurseidcheck);
        nurseidcheck.setBounds(180, 280, 50, 30);

        resetall.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetall.setText("Reset");
        resetall.setBorder(new javax.swing.border.MatteBorder(null));
        resetall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetallActionPerformed(evt);
            }
        });
        jPanel1.add(resetall);
        resetall.setBounds(170, 100, 60, 30);

        rr_rcat_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_rcat_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Cate" }));
        rr_rcat_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rr_rcat_comboActionPerformed(evt);
            }
        });
        jPanel1.add(rr_rcat_combo);
        rr_rcat_combo.setBounds(100, 150, 130, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Status");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(50, 240, 40, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("N-L-Name");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 360, 70, 30);

        rr_nlname.setEditable(false);
        rr_nlname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_nlname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(rr_nlname);
        rr_nlname.setBounds(100, 360, 130, 30);

        adddata.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        adddata.setText("Add");
        adddata.setBorder(new javax.swing.border.MatteBorder(null));
        adddata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adddataActionPerformed(evt);
            }
        });
        jPanel1.add(adddata);
        adddata.setBounds(90, 450, 90, 30);

        rr_nurseid_et.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_nurseid_et.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rr_nurseid_et.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        rr_nurseid_et.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rr_nurseid_etKeyTyped(evt);
            }
        });
        jPanel1.add(rr_nurseid_et);
        rr_nurseid_et.setBounds(100, 280, 60, 30);

        rr_nfname.setEditable(false);
        rr_nfname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_nfname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(rr_nfname);
        rr_nfname.setBounds(100, 320, 130, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Nurse ID");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(30, 280, 60, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("N-F-Name");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 320, 70, 30);

        rr_statuscombo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_statuscombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "OUT", "IN" }));
        rr_statuscombo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        rr_statuscombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rr_statuscomboActionPerformed(evt);
            }
        });
        jPanel1.add(rr_statuscombo);
        rr_statuscombo.setBounds(100, 240, 130, 30);

        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton10.setText("Check");
        jButton10.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jButton10);
        jButton10.setBounds(530, 100, 60, 30);

        jButton11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton11.setText("Reset");
        jButton11.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jButton11);
        jButton11.setBounds(600, 100, 60, 30);

        searching.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searching.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        searching.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchingKeyTyped(evt);
            }
        });
        jPanel1.add(searching);
        searching.setBounds(420, 100, 70, 30);

        _ward_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _ward_error.setForeground(new java.awt.Color(255, 0, 0));
        _ward_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _ward_error.setText("*");
        jPanel1.add(_ward_error);
        _ward_error.setBounds(230, 210, 20, 10);

        rr_ward_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_ward_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ward" }));
        rr_ward_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rr_ward_comboActionPerformed(evt);
            }
        });
        jPanel1.add(rr_ward_combo);
        rr_ward_combo.setBounds(100, 200, 130, 30);

        _searching_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _searching_error.setForeground(new java.awt.Color(255, 0, 0));
        _searching_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _searching_error.setText("*");
        jPanel1.add(_searching_error);
        _searching_error.setBounds(490, 110, 20, 10);

        _status_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _status_error.setForeground(new java.awt.Color(255, 0, 0));
        _status_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _status_error.setText("*");
        jPanel1.add(_status_error);
        _status_error.setBounds(230, 250, 20, 10);

        _nurse_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _nurse_error.setForeground(new java.awt.Color(255, 0, 0));
        _nurse_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _nurse_error.setText("*");
        jPanel1.add(_nurse_error);
        _nurse_error.setBounds(160, 290, 20, 10);

        updatedata.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        updatedata.setText("Update");
        updatedata.setBorder(new javax.swing.border.MatteBorder(null));
        updatedata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatedataActionPerformed(evt);
            }
        });
        jPanel1.add(updatedata);
        updatedata.setBounds(190, 450, 90, 30);

        _roomcate_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _roomcate_error.setForeground(new java.awt.Color(255, 0, 0));
        _roomcate_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _roomcate_error.setText("*");
        jPanel1.add(_roomcate_error);
        _roomcate_error.setBounds(230, 160, 20, 10);

        jPanel4.add(jPanel1);
        jPanel1.setBounds(230, 160, 700, 500);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setText("Add Rooms");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(490, 130, 130, 30);

        back.setBackground(new java.awt.Color(255, 255, 255));
        back.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        back.setText("Back");
        back.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 51)));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel4.add(back);
        back.setBounds(760, 70, 150, 30);

        jLabel6.setBackground(new java.awt.Color(0, 102, 153));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("           ADMIN Portal -- Internal ");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 0)));
        jLabel6.setOpaque(true);
        jPanel4.add(jLabel6);
        jLabel6.setBounds(230, 50, 710, 70);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(null);

        i_addqualification.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        i_addqualification.setText("Add Qualification");
        i_addqualification.setBorder(new javax.swing.border.MatteBorder(null));
        i_addqualification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_addqualificationActionPerformed(evt);
            }
        });
        jPanel2.add(i_addqualification);
        i_addqualification.setBounds(10, 90, 190, 40);

        i_addroomcate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        i_addroomcate.setText("Add Room Cate");
        i_addroomcate.setBorder(new javax.swing.border.MatteBorder(null));
        i_addroomcate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_addroomcateActionPerformed(evt);
            }
        });
        jPanel2.add(i_addroomcate);
        i_addroomcate.setBounds(10, 210, 190, 40);

        i_addrooms.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        i_addrooms.setText("Add Rooms");
        i_addrooms.setBorder(new javax.swing.border.MatteBorder(null));
        i_addrooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_addroomsActionPerformed(evt);
            }
        });
        jPanel2.add(i_addrooms);
        i_addrooms.setBounds(10, 270, 190, 40);

        i_addward.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        i_addward.setText("Add Ward");
        i_addward.setBorder(new javax.swing.border.MatteBorder(null));
        i_addward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_addwardActionPerformed(evt);
            }
        });
        jPanel2.add(i_addward);
        i_addward.setBounds(10, 150, 190, 40);

        jPanel4.add(jPanel2);
        jPanel2.setBounds(10, 160, 210, 500);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 940, 680);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void showtime(){
        new Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("hh:mm:ss a");
            timegetting.setText(t.format(d));
        }).start();   
    }
    
    void showdate(){
        new Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("yyyy-MM-dd");
            registrationdate.setText(t.format(d));
        }).start();
    }
    private void getWardtype(){
        try{
            conn.OpenConnection();
            String query="select * from deptward";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("wname");
                rr_ward_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    private void getRoomCat(){
        try{
            conn.OpenConnection();
            String query="select * from roomcategory";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("rcatname");
                rr_rcat_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    
    private void showdata(){
        
        ArrayList<admin_addingclass.addrooms> list = userlist();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] row = new Object[6];
        for(int i=0 ; i<list.size() ; i++){
            row[0] = list.get(i).getRrid();
            row[1] = list.get(i).getRoomtypename();
            row[2] = list.get(i).getDeptwardname();
            row[3] = list.get(i).getNurseid();
            row[4] = list.get(i).getNfname();
            row[5] = list.get(i).getNlname();
            model.addRow(row);
        }
    
    }
    
    private ArrayList<admin_addingclass.addrooms> userlist() {
            ArrayList<admin_addingclass.addrooms> userList = new ArrayList<>();
            try{
                conn.OpenConnection();
//(rrid, nurseid, roomtypeid, deptwardid, ramount, nfname, nlname, roomtypename, deptwardname, status)
                String selectquery="select r.rrid ,rc.rcid, r.wid,n.nid, rc.rcatname , rc.ramount , w.wname , r.rstatus , n.nfname , n.nlname from room r , roomcategory rc , deptward w , nurse n where r.rcid=rc.rcid and r.wid=w.wid and r.nid=n.nid order by rrid desc";
                conn.GetData(selectquery);
                admin_addingclass adc = new admin_addingclass();
                admin_addingclass.addrooms adrc;
                while(conn.rst.next()){
                    adrc = adc.new addrooms(
                    conn.rst.getInt("rrid"),
                    conn.rst.getInt("nid"),
                    conn.rst.getInt("rcid"),
                    conn.rst.getInt("wid"),
                    conn.rst.getInt("ramount"),
                    conn.rst.getString("nfname"),
                    conn.rst.getString("nlname"),
                    conn.rst.getString("rcatname"),
                    conn.rst.getString("wname"),
                    conn.rst.getString("rstatus")
                    );
                 userList.add(adrc);   
                }
                
            }catch(SQLException e ){System.out.println(e);}
        
     return userList;
    }
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        admin_internal aii = new admin_internal();
        aii.setVisible(true);
        dispose();
    }//GEN-LAST:event_backActionPerformed

    private void i_addqualificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_addqualificationActionPerformed
        admin_internal_qualification  aiq= new admin_internal_qualification();
        aiq.setVisible(true);
        dispose();
    }//GEN-LAST:event_i_addqualificationActionPerformed

    private void i_addroomcateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_addroomcateActionPerformed
        admin_internal_roomcate arc = new admin_internal_roomcate();
        arc.setVisible(true);
        dispose();
    }//GEN-LAST:event_i_addroomcateActionPerformed

    private void i_addroomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_addroomsActionPerformed
        admin_internal_rooms arr = new admin_internal_rooms();
        arr.setVisible(true);
        dispose();
    }//GEN-LAST:event_i_addroomsActionPerformed

    private void i_addwardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_addwardActionPerformed
        admin_internal_ward aw = new admin_internal_ward();
        aw.setVisible(true);
        dispose();
    }//GEN-LAST:event_i_addwardActionPerformed

    private void rr_nurseid_etKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rr_nurseid_etKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_rr_nurseid_etKeyTyped

    private void searchingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchingKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_searchingKeyTyped

    private void resetallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetallActionPerformed
        _nurse_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _status_error.setVisible(false);
        _ward_error.setVisible(false);
        
        rr_id_tv.setText(conn.getID("select rrid from room ORDER BY rrid DESC Fetch first 1 rows only"));
        rr_rcat_combo.setSelectedIndex(0);
        rr_statuscombo.setSelectedIndex(0);
        rr_ward_combo.setSelectedIndex(0);
        rr_nurseid_et.setText("");
        rr_nfname.setText("");
        rr_nlname.setText("");
        
        updatedata.setVisible(false);
        adddata.setVisible(true);
        
    }//GEN-LAST:event_resetallActionPerformed

    private void rr_rcat_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rr_rcat_comboActionPerformed
        
        if(rr_rcat_combo.getSelectedItem().equals("Select Cate")){roomcats=null;}
        else{
            _roomcate_error.setVisible(false);
            roomcats=String.valueOf(rr_rcat_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from roomcategory";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("rcid");
                String s2 = conn.rst.getString("rcatname");
                if(s2.equals(roomcats)){
                    roomcatid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + cityid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_rr_rcat_comboActionPerformed

    private void rr_ward_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rr_ward_comboActionPerformed
        if(rr_ward_combo.getSelectedItem().equals("Select Ward")){wardtypes=null;}
        else{
            _ward_error.setVisible(false);
            wardtypes=String.valueOf(rr_ward_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from deptward";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("wid");
                String s2 = conn.rst.getString("wname");
                if(s2.equals(wardtypes)){
                    wardtypeid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + cityid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_rr_ward_comboActionPerformed

    private void rr_statuscomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rr_statuscomboActionPerformed
        if(rr_statuscombo.getSelectedItem().equals("OUT")){ statusid=0;statuss="OUT";}
        if(rr_statuscombo.getSelectedItem().equals("IN")){ statusid=1;statuss="IN";}
    }//GEN-LAST:event_rr_statuscomboActionPerformed

    private void nurseidcheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nurseidcheckActionPerformed
        
        
        if(rr_nurseid_et.getText().equals("")){_nurse_error.setVisible(true);}
        if(!rr_nurseid_et.getText().isEmpty()){
            boolean found = false;
            _nurse_error.setVisible(false);
           try{
               conn.OpenConnection();
               String query = "select nfname,nlname from nurse where nid="+rr_nurseid_et.getText();
               conn.GetData(query);
               while(conn.rst.next()){
                   found = true;
                   rr_nfname.setText(conn.rst.getString("nfname"));
                   rr_nlname.setText(conn.rst.getString("nlname"));
                   break;
               }
               
            if(found == false){
                JOptionPane.showMessageDialog(null, "Sorry ..! Not Found such Nurse");
                rr_nurseid_et.setText("");
                rr_nfname.setText("");
                rr_nlname.setText("");
            }   
           }catch(SQLException e ){System.out.println(e);}
           
        }
    }//GEN-LAST:event_nurseidcheckActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        _nurse_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _status_error.setVisible(false);
        _ward_error.setVisible(false);
        
        updatedata.setVisible(true);
        adddata.setVisible(false);
        
        int i = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        rr_id_tv.setText(model.getValueAt(i,0).toString());
        int id = Integer.valueOf(rr_id_tv.getText());
        
        ArrayList<admin_addingclass.addrooms> listing = userlist();
        for(int j=0 ; j<listing.size() ; j++){
            if(listing.get(j).getRrid()== id){
                
                rr_rcat_combo.setSelectedItem(listing.get(j).getRoomtypename());
                rr_ward_combo.setSelectedItem(listing.get(j).getDeptwardname());
                rr_statuscombo.setSelectedItem(listing.get(j).getStatus());
                rr_nurseid_et.setText(String.valueOf(listing.get(j).getNurseid()));
                rr_nfname.setText(String.valueOf(listing.get(j).getNfname()));
                rr_nlname.setText(String.valueOf(listing.get(j).getNlname()));
                
                break;
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void adddataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adddataActionPerformed
        
        boolean chkempty = false;
        
        if(rr_ward_combo.getSelectedItem().equals("Select Ward")){_ward_error.setVisible(true);chkempty = false;}
        if(rr_rcat_combo.getSelectedItem().equals("Select Cate")){_roomcate_error.setVisible(true);chkempty = false;}
        if(rr_nurseid_et.getText().equals("")){_nurse_error.setVisible(true);chkempty = false;}
        
        if(!rr_ward_combo.getSelectedItem().equals("Select Ward")
          && !rr_rcat_combo.getSelectedItem().equals("Select Cate")
          && !rr_nurseid_et.getText().isEmpty()){chkempty=true;}
        
        if(chkempty==false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
        if(chkempty==true){
            _nurse_error.setVisible(false);
            _roomcate_error.setVisible(false);
            _status_error.setVisible(false);
            _ward_error.setVisible(false);
            try{
                conn.OpenConnection();
                System.out.println(roomcatid + ": " + wardtypeid + ": " + statuss + ": " + rr_nurseid_et.getText());
                String query = "insert into room(rcid,wid,rstatus,nid) values ("+roomcatid+" , "+wardtypeid
                +" , '"+statuss+"' , "+rr_nurseid_et.getText()+" )";
                int flag = conn.InsertUpdateDelete(query);
                
                if(flag == 1 ){
                    JOptionPane.showMessageDialog(null, "Successfully Inserted..!");
                    
                    rr_id_tv.setText(conn.getID("select rrid from room ORDER BY rrid DESC Fetch first 1 rows only"));
                    rr_rcat_combo.setSelectedIndex(0);
                    rr_ward_combo.setSelectedIndex(0);
                    rr_statuscombo.setSelectedIndex(0);
                    rr_nurseid_et.setText("");
                    rr_nfname.setText("");
                    rr_nlname.setText("");
                    
                    DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
                    model1.setRowCount(0);
                    showdata();
             
                }
            }catch(HeadlessException e){System.out.println(e);}
        }
        
    }//GEN-LAST:event_adddataActionPerformed

    private void updatedataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatedataActionPerformed
        boolean chkempty = false;
        
        if(rr_ward_combo.getSelectedItem().equals("Select Ward")){_ward_error.setVisible(true);chkempty = false;}
        if(rr_rcat_combo.getSelectedItem().equals("Select Cate")){_roomcate_error.setVisible(true);chkempty = false;}
        if(rr_nurseid_et.getText().equals("")){_nurse_error.setVisible(true);chkempty = false;}
        
        if(!rr_ward_combo.getSelectedItem().equals("Select Ward")
          && !rr_rcat_combo.getSelectedItem().equals("Select Cate")
          && !rr_nurseid_et.getText().isEmpty()){chkempty=true;}
        
        if(chkempty==false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
        if(chkempty==true){
            _nurse_error.setVisible(false);
            _roomcate_error.setVisible(false);
            _status_error.setVisible(false);
            _ward_error.setVisible(false);
            try{
                int row = jTable1.getSelectedRow();
                int value = Integer.parseInt((jTable1.getModel().getValueAt(row, 0).toString()));
            
                conn.OpenConnection();
                String query = "update room set rcid="+roomcatid+" , wid="+wardtypeid+" , rstatus='"+statuss+"' , nid="
                +rr_nurseid_et.getText()+" where rrid="+value;
                int flag = conn.InsertUpdateDelete(query);
                
                if(flag == 1 ){
                    JOptionPane.showMessageDialog(null, "Successfully Updated..!");
                    
                    rr_id_tv.setText(conn.getID("select rrid from room ORDER BY rrid DESC Fetch first 1 rows only"));
                    rr_rcat_combo.setSelectedIndex(0);
                    rr_ward_combo.setSelectedIndex(0);
                    rr_statuscombo.setSelectedIndex(0);
                    rr_nurseid_et.setText("");
                    rr_nfname.setText("");
                    rr_nlname.setText("");
                    
                    DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
                    model1.setRowCount(0);
                    showdata();
                    
                    updatedata.setVisible(false);
                    adddata.setVisible(true);
                    
                }
            }catch(HeadlessException e){System.out.println(e);}
            
        }
    }//GEN-LAST:event_updatedataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_internal_rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_internal_rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_internal_rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_internal_rooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new admin_internal_rooms().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _nurse_error;
    private javax.swing.JLabel _roomcate_error;
    private javax.swing.JLabel _searching_error;
    private javax.swing.JLabel _status_error;
    private javax.swing.JLabel _ward_error;
    private javax.swing.JButton adddata;
    private javax.swing.JButton back;
    private javax.swing.JButton i_addqualification;
    private javax.swing.JButton i_addroomcate;
    private javax.swing.JButton i_addrooms;
    private javax.swing.JButton i_addward;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton nurseidcheck;
    private javax.swing.JTextField registrationdate;
    private javax.swing.JButton resetall;
    private javax.swing.JTextField rr_id_tv;
    private javax.swing.JTextField rr_nfname;
    private javax.swing.JTextField rr_nlname;
    private javax.swing.JTextField rr_nurseid_et;
    private javax.swing.JComboBox<String> rr_rcat_combo;
    private javax.swing.JComboBox<String> rr_statuscombo;
    private javax.swing.JComboBox<String> rr_ward_combo;
    private javax.swing.JTextField searching;
    private javax.swing.JLabel timegetting;
    private javax.swing.JButton updatedata;
    // End of variables declaration//GEN-END:variables
}
