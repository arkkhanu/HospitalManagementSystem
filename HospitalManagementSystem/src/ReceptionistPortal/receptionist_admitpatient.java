/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ReceptionistPortal;

import DBConnectionP.DBConnection;
import LoginForm.loginsection;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author AbdulRehman
 */
public class receptionist_admitpatient extends javax.swing.JFrame {

    DBConnection conn = new DBConnection();
    
    int id = -1;
    String username = null;
    int roomcatid=-1 , wardtypeid=-1 , roomno1 = -1 , roomno2 = -1;
    String roomcats = null , wardtypes = null;
   
    public receptionist_admitpatient() {
        initComponents();
        showdate();
        showtime();
        
        _patid_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _roomget_error.setVisible(false);
        _roomno_error.setVisible(false);
        _wardtype_error.setVisible(false);
        _patdes_error.setVisible(false);
        ad_id_tv.setText(conn.getID("select adtdid from admitpatient ORDER BY adtdid DESC Fetch first 1 rows only"));
        
        getWardtype();
        getRoomCat();
    }

    public receptionist_admitpatient(int id ,String username) {
        initComponents();
        showdate();
        showtime();
        this.id=id;
        this.username=username;
        rr_patrecp_tv.setText(String.valueOf(id));
        receptionistname.setText(username);
        
        _patid_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _roomget_error.setVisible(false);
        _roomno_error.setVisible(false);
        _wardtype_error.setVisible(false);
        _patdes_error.setVisible(false);
        ad_id_tv.setText(conn.getID("select adtdid from admitpatient ORDER BY adtdid DESC Fetch first 1 rows only"));
        
        getWardtype();
        getRoomCat();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logoutbtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        timegetting = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        getroom = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ad_rcat_combo = new javax.swing.JComboBox<>();
        ad_ward_combo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        ad_doclname_ed = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ad_chksts_ed = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ad_chkroomno_ed = new javax.swing.JTextField();
        resetAll = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ad_patdes_ed = new javax.swing.JTextField();
        admitit = new javax.swing.JButton();
        ad_roomget_ed = new javax.swing.JTextField();
        getroomavil = new javax.swing.JButton();
        ad_id_tv = new javax.swing.JTextField();
        ad_patlname_ed = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        registrationdate = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        rr_patrecp_tv = new javax.swing.JTextField();
        receptionistname = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        _roomget_error = new javax.swing.JLabel();
        _roomcate_error = new javax.swing.JLabel();
        _wardtype_error = new javax.swing.JLabel();
        ad_patfname_ed = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        ad_docfname_ed = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        ad_patid_ed = new javax.swing.JTextField();
        _roomno_error = new javax.swing.JLabel();
        _patid_error = new javax.swing.JLabel();
        getpatient = new javax.swing.JButton();
        _patdes_error = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        rp_registration_btn = new javax.swing.JButton();
        rp_admit_btn = new javax.swing.JButton();
        rp_bill_for_admit = new javax.swing.JButton();
        rp_opt_details = new javax.swing.JButton();
        rp_admit_details = new javax.swing.JButton();
        rp_opt_btn = new javax.swing.JButton();
        rp_appointment_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(947, 708));
        setResizable(false);
        setSize(new java.awt.Dimension(947, 708));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/p2.png"))); // NOI18N
        jPanel4.add(jLabel1);
        jLabel1.setBounds(50, 10, 130, 130);

        logoutbtn.setBackground(new java.awt.Color(255, 255, 255));
        logoutbtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        logoutbtn.setText("Logout");
        logoutbtn.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 0, 51)));
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        jPanel4.add(logoutbtn);
        logoutbtn.setBounds(760, 70, 150, 30);

        jLabel6.setBackground(new java.awt.Color(0, 102, 153));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("                      Receptionist Portal");
        jLabel6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 0)));
        jLabel6.setOpaque(true);
        jPanel4.add(jLabel6);
        jLabel6.setBounds(230, 50, 710, 70);

        timegetting.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        timegetting.setText("Time");
        jPanel4.add(timegetting);
        timegetting.setBounds(440, 10, 120, 30);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        getroom.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getroom.setText("Get");
        getroom.setBorder(new javax.swing.border.MatteBorder(null));
        getroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getroomActionPerformed(evt);
            }
        });
        jPanel1.add(getroom);
        getroom.setBounds(240, 330, 60, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Room Category  ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 90, 110, 30);

        ad_rcat_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_rcat_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type" }));
        ad_rcat_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_rcat_comboActionPerformed(evt);
            }
        });
        jPanel1.add(ad_rcat_combo);
        ad_rcat_combo.setBounds(20, 120, 100, 30);

        ad_ward_combo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_ward_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Ward" }));
        ad_ward_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad_ward_comboActionPerformed(evt);
            }
        });
        jPanel1.add(ad_ward_combo);
        ad_ward_combo.setBounds(150, 120, 120, 30);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Ward Typ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(150, 90, 110, 30);

        ad_doclname_ed.setEditable(false);
        ad_doclname_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_doclname_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_doclname_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_doclname_ed);
        ad_doclname_ed.setBounds(470, 310, 160, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Doctor FN");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(380, 270, 70, 30);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Admit ID");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(60, 170, 60, 30);

        ad_chksts_ed.setEditable(false);
        ad_chksts_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_chksts_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_chksts_ed.setText("IN");
        ad_chksts_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_chksts_ed);
        ad_chksts_ed.setBounds(470, 220, 70, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Status");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(400, 220, 50, 30);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setText("Patient OPID");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(40, 210, 80, 30);

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Room No");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(320, 90, 70, 30);

        ad_chkroomno_ed.setEditable(false);
        ad_chkroomno_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_chkroomno_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_chkroomno_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_chkroomno_ed);
        ad_chkroomno_ed.setBounds(320, 120, 70, 30);

        resetAll.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        resetAll.setText("Reset");
        resetAll.setBorder(new javax.swing.border.MatteBorder(null));
        resetAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAllActionPerformed(evt);
            }
        });
        jPanel1.add(resetAll);
        resetAll.setBounds(240, 170, 60, 30);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Room No");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(60, 330, 60, 30);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Disease");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(70, 370, 50, 30);

        ad_patdes_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_patdes_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        ad_patdes_ed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ad_patdes_edKeyTyped(evt);
            }
        });
        jPanel1.add(ad_patdes_ed);
        ad_patdes_ed.setBounds(140, 370, 490, 30);

        admitit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        admitit.setText("Admit");
        admitit.setBorder(new javax.swing.border.MatteBorder(null));
        admitit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admititActionPerformed(evt);
            }
        });
        jPanel1.add(admitit);
        admitit.setBounds(280, 430, 130, 40);

        ad_roomget_ed.setEditable(false);
        ad_roomget_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_roomget_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_roomget_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_roomget_ed);
        ad_roomget_ed.setBounds(140, 330, 70, 30);

        getroomavil.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getroomavil.setText("Check ");
        getroomavil.setBorder(new javax.swing.border.MatteBorder(null));
        getroomavil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getroomavilActionPerformed(evt);
            }
        });
        jPanel1.add(getroomavil);
        getroomavil.setBounds(420, 120, 60, 30);

        ad_id_tv.setEditable(false);
        ad_id_tv.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_id_tv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_id_tv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_id_tv);
        ad_id_tv.setBounds(140, 170, 70, 30);

        ad_patlname_ed.setEditable(false);
        ad_patlname_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_patlname_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_patlname_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_patlname_ed);
        ad_patlname_ed.setBounds(140, 290, 160, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Patient L Name");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(30, 290, 90, 30);

        registrationdate.setEditable(false);
        registrationdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        registrationdate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        registrationdate.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        registrationdate.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jPanel1.add(registrationdate);
        registrationdate.setBounds(220, 10, 140, 30);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("R ID : ");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(470, 20, 40, 30);

        rr_patrecp_tv.setEditable(false);
        rr_patrecp_tv.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rr_patrecp_tv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rr_patrecp_tv.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(rr_patrecp_tv);
        rr_patrecp_tv.setBounds(520, 20, 60, 30);

        receptionistname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        receptionistname.setText("Null");
        jPanel1.add(receptionistname);
        receptionistname.setBounds(520, 60, 120, 30);

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("R Name : ");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(450, 60, 60, 30);

        _roomget_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _roomget_error.setForeground(new java.awt.Color(255, 0, 0));
        _roomget_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _roomget_error.setText("*");
        jPanel1.add(_roomget_error);
        _roomget_error.setBounds(210, 340, 20, 10);

        _roomcate_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _roomcate_error.setForeground(new java.awt.Color(255, 0, 0));
        _roomcate_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _roomcate_error.setText("*");
        jPanel1.add(_roomcate_error);
        _roomcate_error.setBounds(120, 130, 20, 10);

        _wardtype_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _wardtype_error.setForeground(new java.awt.Color(255, 0, 0));
        _wardtype_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _wardtype_error.setText("*");
        jPanel1.add(_wardtype_error);
        _wardtype_error.setBounds(270, 130, 20, 10);

        ad_patfname_ed.setEditable(false);
        ad_patfname_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_patfname_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_patfname_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_patfname_ed);
        ad_patfname_ed.setBounds(140, 250, 160, 30);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Patient F Name");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(30, 250, 90, 30);

        ad_docfname_ed.setEditable(false);
        ad_docfname_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_docfname_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_docfname_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        jPanel1.add(ad_docfname_ed);
        ad_docfname_ed.setBounds(470, 270, 160, 30);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Doctor LN");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(380, 310, 70, 30);

        ad_patid_ed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ad_patid_ed.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ad_patid_ed.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        ad_patid_ed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ad_patid_edKeyTyped(evt);
            }
        });
        jPanel1.add(ad_patid_ed);
        ad_patid_ed.setBounds(140, 210, 70, 30);

        _roomno_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _roomno_error.setForeground(new java.awt.Color(255, 0, 0));
        _roomno_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _roomno_error.setText("*");
        jPanel1.add(_roomno_error);
        _roomno_error.setBounds(390, 130, 20, 10);

        _patid_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _patid_error.setForeground(new java.awt.Color(255, 0, 0));
        _patid_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _patid_error.setText("*");
        jPanel1.add(_patid_error);
        _patid_error.setBounds(210, 220, 20, 10);

        getpatient.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        getpatient.setText("Check ");
        getpatient.setBorder(new javax.swing.border.MatteBorder(null));
        getpatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getpatientActionPerformed(evt);
            }
        });
        jPanel1.add(getpatient);
        getpatient.setBounds(240, 210, 60, 30);

        _patdes_error.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        _patdes_error.setForeground(new java.awt.Color(255, 0, 0));
        _patdes_error.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        _patdes_error.setText("*");
        jPanel1.add(_patdes_error);
        _patdes_error.setBounds(630, 380, 20, 10);

        jPanel4.add(jPanel1);
        jPanel1.setBounds(250, 170, 670, 490);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel19.setText("Admit Patient");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(470, 130, 160, 40);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(null);

        rp_registration_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_registration_btn.setText("Register Patient");
        rp_registration_btn.setBorder(new javax.swing.border.MatteBorder(null));
        rp_registration_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_registration_btnActionPerformed(evt);
            }
        });
        jPanel2.add(rp_registration_btn);
        rp_registration_btn.setBounds(10, 20, 190, 40);

        rp_admit_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_admit_btn.setText("Admit Patient");
        rp_admit_btn.setBorder(new javax.swing.border.MatteBorder(null));
        rp_admit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_admit_btnActionPerformed(evt);
            }
        });
        jPanel2.add(rp_admit_btn);
        rp_admit_btn.setBounds(10, 200, 190, 40);

        rp_bill_for_admit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_bill_for_admit.setText("Bill for Admit");
        rp_bill_for_admit.setBorder(new javax.swing.border.MatteBorder(null));
        rp_bill_for_admit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_bill_for_admitActionPerformed(evt);
            }
        });
        jPanel2.add(rp_bill_for_admit);
        rp_bill_for_admit.setBounds(10, 260, 190, 40);

        rp_opt_details.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_opt_details.setText("OPT Patient Detail");
        rp_opt_details.setBorder(new javax.swing.border.MatteBorder(null));
        rp_opt_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_opt_detailsActionPerformed(evt);
            }
        });
        jPanel2.add(rp_opt_details);
        rp_opt_details.setBounds(10, 390, 190, 40);

        rp_admit_details.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_admit_details.setText("Admited Patient Detail");
        rp_admit_details.setBorder(new javax.swing.border.MatteBorder(null));
        rp_admit_details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_admit_detailsActionPerformed(evt);
            }
        });
        jPanel2.add(rp_admit_details);
        rp_admit_details.setBounds(10, 330, 190, 40);

        rp_opt_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_opt_btn.setText("Add OPT");
        rp_opt_btn.setBorder(new javax.swing.border.MatteBorder(null));
        rp_opt_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_opt_btnActionPerformed(evt);
            }
        });
        jPanel2.add(rp_opt_btn);
        rp_opt_btn.setBounds(10, 80, 190, 40);

        rp_appointment_btn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        rp_appointment_btn.setText("Appoinment");
        rp_appointment_btn.setBorder(new javax.swing.border.MatteBorder(null));
        rp_appointment_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rp_appointment_btnActionPerformed(evt);
            }
        });
        jPanel2.add(rp_appointment_btn);
        rp_appointment_btn.setBounds(10, 140, 190, 40);

        jPanel4.add(jPanel2);
        jPanel2.setBounds(20, 170, 210, 490);

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 0, 940, 680);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
   void showtime(){
        new javax.swing.Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("hh:mm:ss a");
            timegetting.setText(t.format(d));
        }).start();   
    }
    
    void showdate(){
        new javax.swing.Timer(0, (ActionEvent ae) -> {
            Date d = new Date();
            SimpleDateFormat t = new SimpleDateFormat("yyyy-MM-dd");
            registrationdate.setText(t.format(d));
        }).start();
    }
    
    private void getWardtype(){
        try{
            conn.OpenConnection();
            String query="select * from deptward";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("wname");
                ad_ward_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }
    private void getRoomCat(){
        try{
            conn.OpenConnection();
            String query="select * from roomcategory";
            conn.GetData(query);
            while(conn.rst.next()){
                String gname =conn.rst.getString("rcatname");
                ad_rcat_combo.addItem(gname);
            }
            conn.CloseConnection();
        }catch(SQLException e){ System.out.println(e);}
    }

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        LoginForm.loginsection lfl = new loginsection();
        lfl.setVisible(true);
        dispose();
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void rp_registration_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_registration_btnActionPerformed
        receptionist_mainmenu rmm = new receptionist_mainmenu(id,username);
        rmm.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_registration_btnActionPerformed

    private void rp_admit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_admit_btnActionPerformed
        receptionist_admitpatient radp = new receptionist_admitpatient(id,username);
        radp.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_admit_btnActionPerformed

    private void rp_bill_for_admitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_bill_for_admitActionPerformed
        receptionist_billforadmit rba = new receptionist_billforadmit(id,username);
        rba.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_bill_for_admitActionPerformed

    private void rp_opt_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_opt_detailsActionPerformed
        receptionist_optdetail roptd = new receptionist_optdetail(id,username);
        roptd.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_opt_detailsActionPerformed

    private void rp_admit_detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_admit_detailsActionPerformed
        receptionist_admitpatientdetail adpd = new receptionist_admitpatientdetail(id,username);
        adpd.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_admit_detailsActionPerformed

    private void rp_opt_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_opt_btnActionPerformed
        receptionist_opt ropt = new receptionist_opt(id,username);
        ropt.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_opt_btnActionPerformed

    private void rp_appointment_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rp_appointment_btnActionPerformed
        receptionist_appoinment rap = new receptionist_appoinment(id,username);
        rap.setVisible(true);
        dispose();
    }//GEN-LAST:event_rp_appointment_btnActionPerformed

    private void ad_patid_edKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ad_patid_edKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE) )){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_ad_patid_edKeyTyped

    private void ad_patdes_edKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ad_patdes_edKeyTyped
        char c = evt.getKeyChar();
        if(!(Character.isAlphabetic(c) || (c==KeyEvent.VK_BACK_SPACE)  || (c==KeyEvent.VK_DELETE)  || (c==KeyEvent.VK_SPACE))){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_ad_patdes_edKeyTyped

    private void ad_rcat_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_rcat_comboActionPerformed
        if(ad_rcat_combo.getSelectedItem().equals("Select Cate")){roomcats=null;}
        else{
            _roomcate_error.setVisible(false);
            roomcats=String.valueOf(ad_rcat_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from roomcategory";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("rcid");
                String s2 = conn.rst.getString("rcatname");
                if(s2.equals(roomcats)){
                    roomcatid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + cityid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_ad_rcat_comboActionPerformed

    private void ad_ward_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad_ward_comboActionPerformed
        if(ad_ward_combo.getSelectedItem().equals("Select Ward")){wardtypes=null;}
        else{
            _wardtype_error.setVisible(false);
            wardtypes=String.valueOf(ad_ward_combo.getSelectedItem());
            try{
                conn.OpenConnection();
                String query= "select * from deptward";
                conn.GetData(query);
                while(conn.rst.next()){
                int    s1 = conn.rst.getInt("wid");
                String s2 = conn.rst.getString("wname");
                if(s2.equals(wardtypes)){
                    wardtypeid=s1;
//                    System.out.println(s1 + " : " + s2 + " : " + cityid); 
                  }
                }
                conn.CloseConnection();
            }catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_ad_ward_comboActionPerformed

    private void getroomavilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getroomavilActionPerformed
          boolean emptyfld = false;
          if(ad_rcat_combo.getSelectedItem().equals("Select Type")){emptyfld=false;_roomcate_error.setVisible(true);}
          if(ad_ward_combo.getSelectedItem().equals("Select Ward")){emptyfld=false;_wardtype_error.setVisible(true);}
          
          if(!ad_rcat_combo.getSelectedItem().equals("Select Type")
             && !ad_ward_combo.getSelectedItem().equals("Select Ward") ){emptyfld=true;}
          if(emptyfld == false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
          if(emptyfld == true){
              _roomcate_error.setVisible(false);
              _wardtype_error.setVisible(false);
              try{
                  conn.OpenConnection();
                  boolean found = false;
//                  select rrid , rcatname , wname from room r , deptward dw , roomcategory rc where r.rcid=rc.rcid and r.wid=dw.wid and rstatus='OUT';
                  String query="select rrid , rcatname , wname from room r , deptward dw , roomcategory rc where r.rcid=rc.rcid and r.wid=dw.wid and rstatus='OUT'";
                  conn.GetData(query);
                  while(conn.rst.next()){
                      int    c1 = conn.rst.getInt("rrid");
                      String c2 = conn.rst.getString("rcatname");
                      String c3 = conn.rst.getString("wname");
                      if(roomcats.equals(c2) && wardtypes.equals(c3)){
                          found=true;
                          roomno1=c1;
                          ad_chkroomno_ed.setText(String.valueOf(roomno1));
                          break;
                      }
                  }
                  if(found==false){
                   ad_chkroomno_ed.setText("");
                  JOptionPane.showMessageDialog(null, "Sorry ..! Not Available ");
                  }
              }catch(SQLException e ){System.out.println(e);}
          }
          
    }//GEN-LAST:event_getroomavilActionPerformed

    private void resetAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAllActionPerformed
        _patid_error.setVisible(false);
        _roomcate_error.setVisible(false);
        _roomget_error.setVisible(false);
        _roomno_error.setVisible(false);
        _wardtype_error.setVisible(false);
        _patdes_error.setVisible(false);
        
        ad_chkroomno_ed.setText("");
        ad_roomget_ed.setText("");
        ad_docfname_ed.setText("");
        ad_doclname_ed.setText("");
        ad_patdes_ed.setText("");
        ad_patid_ed.setText("");
        ad_patfname_ed.setText("");
        ad_patlname_ed.setText("");
        
        ad_ward_combo.setSelectedIndex(0);
        ad_rcat_combo.setSelectedIndex(0);
        
    }//GEN-LAST:event_resetAllActionPerformed

    private void getpatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getpatientActionPerformed
        if(ad_patid_ed.getText().equals("")){_patid_error.setVisible(true);}
        if(!ad_patid_ed.getText().isEmpty()){
            boolean found = false;
            _patid_error.setVisible(false);
           try{
               conn.OpenConnection();
// select optid , fname,lname ,dfname , dlname from patientopt p , regpatient rp , doctor d where p.rpid=rp.rpid and p.did=d.did and p.optid=12;              
               String query = "select optid , fname,lname ,dfname , dlname from patientopt p , regpatient rp , doctor d where p.rpid=rp.rpid and p.did=d.did and p.optid="+ad_patid_ed.getText();
               conn.GetData(query);
               while(conn.rst.next()){
                   found = true;
                   ad_patfname_ed.setText(conn.rst.getString("fname"));
                   ad_patlname_ed.setText(conn.rst.getString("lname"));
                   ad_docfname_ed.setText(conn.rst.getString("dfname"));
                   ad_doclname_ed.setText(conn.rst.getString("dlname"));
                   break;
               }
               
            if(found == false){
                ad_patid_ed.setText("");
                ad_patfname_ed.setText("");
                ad_patlname_ed.setText("");
                ad_docfname_ed.setText("");
                ad_doclname_ed.setText("");
                JOptionPane.showMessageDialog(null, "Sorry ..! Not Found such Nurse");
            }   
           }catch(SQLException e ){System.out.println(e);}
           
        }
    }//GEN-LAST:event_getpatientActionPerformed

    private void getroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getroomActionPerformed
        if(ad_chkroomno_ed.getText().equals("")){_roomno_error.setVisible(true);_roomget_error.setVisible(true);}
        if(!ad_chkroomno_ed.getText().isEmpty()){
            _roomno_error.setVisible(false);
            _roomget_error.setVisible(false);
            ad_roomget_ed.setText(ad_chkroomno_ed.getText());
        }
    }//GEN-LAST:event_getroomActionPerformed

    private void admititActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admititActionPerformed
        boolean emptychk = false;
        if(ad_chkroomno_ed.getText().equals("")){_roomno_error.setVisible(true);emptychk = false;}
        if(ad_patid_ed.getText().equals("")){_patid_error.setVisible(true);emptychk = false;}
        if(ad_patdes_ed.getText().equals("")){_patdes_error.setVisible(true);emptychk = false;}
        
        if(!ad_chkroomno_ed.getText().isEmpty()
           && !ad_patid_ed.getText().isEmpty()
           && !ad_patdes_ed.getText().isEmpty()){emptychk=true;}
        if(emptychk == false){JOptionPane.showMessageDialog(null, "Please Fill the Fileds");}
        if(emptychk == true){
            
            _patid_error.setVisible(false);
            _roomcate_error.setVisible(false);
            _roomget_error.setVisible(false);
            _roomno_error.setVisible(false);
            _wardtype_error.setVisible(false);
            _patdes_error.setVisible(false);
            
            try{
                boolean anotherone=false;
                conn.OpenConnection();
                String query1 = "insert into admitpatient (rid,optid,rrid,adtstatus,ddise,chkin,chkout) values "
                + "( "+rr_patrecp_tv.getText()+" , "+ad_patid_ed.getText()+" , "+ad_roomget_ed.getText()
                +" , 'IN' , '"+ad_patdes_ed.getText()+"' , to_date('"+registrationdate.getText()+"','yyyy-MM-dd') , null )";
                int flag1 = conn.InsertUpdateDelete(query1);
                if(flag1 == 1){
                        anotherone = true;
                        
                }else{System.out.println("problem flag1");}
                
                if(anotherone == true ){
                    String query2 = "update room set rstatus='IN' where rrid="+ad_roomget_ed.getText();
                    int flag2 = conn.InsertUpdateDelete(query2);
                    if(flag2 == 1 ){
                        roomcatid=-1;
                        wardtypeid=-1;
                        roomno1=-1;
                        roomno2=-1;
                        roomcats=null;
                        wardtypes=null;
                        JOptionPane.showMessageDialog(null, "Successfully Admited..!");
                        ad_chkroomno_ed.setText("");
                        ad_roomget_ed.setText("");
                        ad_docfname_ed.setText("");
                        ad_doclname_ed.setText("");
                        ad_patdes_ed.setText("");
                        ad_patid_ed.setText("");
                        ad_patfname_ed.setText("");
                        ad_patlname_ed.setText("");
                        ad_ward_combo.setSelectedIndex(0);
                        ad_rcat_combo.setSelectedIndex(0);
                        
                        ad_id_tv.setText(conn.getID("select adtdid from admitpatient ORDER BY adtdid DESC Fetch first 1 rows only"));
                    }else{System.out.println("flag 2 problem");}
                }
                else{System.out.println("another problem");}
            }catch(HeadlessException e ){System.out.println(e);}
            
        }
        
    }//GEN-LAST:event_admititActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(receptionist_admitpatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new receptionist_admitpatient().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _patdes_error;
    private javax.swing.JLabel _patid_error;
    private javax.swing.JLabel _roomcate_error;
    private javax.swing.JLabel _roomget_error;
    private javax.swing.JLabel _roomno_error;
    private javax.swing.JLabel _wardtype_error;
    private javax.swing.JTextField ad_chkroomno_ed;
    private javax.swing.JTextField ad_chksts_ed;
    private javax.swing.JTextField ad_docfname_ed;
    private javax.swing.JTextField ad_doclname_ed;
    private javax.swing.JTextField ad_id_tv;
    private javax.swing.JTextField ad_patdes_ed;
    private javax.swing.JTextField ad_patfname_ed;
    private javax.swing.JTextField ad_patid_ed;
    private javax.swing.JTextField ad_patlname_ed;
    private javax.swing.JComboBox<String> ad_rcat_combo;
    private javax.swing.JTextField ad_roomget_ed;
    private javax.swing.JComboBox<String> ad_ward_combo;
    private javax.swing.JButton admitit;
    private javax.swing.JButton getpatient;
    private javax.swing.JButton getroom;
    private javax.swing.JButton getroomavil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton logoutbtn;
    private javax.swing.JLabel receptionistname;
    private javax.swing.JTextField registrationdate;
    private javax.swing.JButton resetAll;
    private javax.swing.JButton rp_admit_btn;
    private javax.swing.JButton rp_admit_details;
    private javax.swing.JButton rp_appointment_btn;
    private javax.swing.JButton rp_bill_for_admit;
    private javax.swing.JButton rp_opt_btn;
    private javax.swing.JButton rp_opt_details;
    private javax.swing.JButton rp_registration_btn;
    private javax.swing.JTextField rr_patrecp_tv;
    private javax.swing.JLabel timegetting;
    // End of variables declaration//GEN-END:variables
}
